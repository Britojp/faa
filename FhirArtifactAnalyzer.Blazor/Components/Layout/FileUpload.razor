@using Microsoft.AspNetCore.Components.Forms
@inject IJSRuntime JS

<div class="card shadow-sm p-4 mb-4">
    <h5 class="card-title mb-3 text-primary">Upload de Arquivos</h5>

    <p class="mb-3">
        Clique abaixo para selecionar um arquivo. Os arquivos aceitos são:
    </p>
    <ul>
        <li><strong>Pacotes NPM (.tgz):</strong> Tamanho máximo de 100MB</li>
        <li><strong>Arquivos ZIP:</strong> Tamanho máximo de 100MB</li>
        <li><strong>Diretórios:</strong> Limite de 1.000 arquivos por diretório.</li>
        <li><strong>Arquivos Individuais:</strong> Apenas JSON. Tamanho máximo de 10MB. Encoding: UTF-8.</li>
    </ul>
    <p><strong>Timeout para download:</strong> 30 segundos.</p>

    <div class="dropzone" @onclick="TriggerFileInput">
        <InputFile @ref="inputFileRef" OnChange="HandleFileSelected" class="d-none" id="inputFile" />
        <p class="dropzone-text text-center">Clique aqui para selecionar um arquivo</p>
    </div>

    @if (selectedFileName != null)
    {
        <div class="alert alert-info mt-3" role="alert">
            <strong>Arquivo selecionado:</strong> @selectedFileName<br />
            <strong>Tamanho:</strong> @selectedFileSize KB
        </div>
    }

    <button class="btn btn-primary mt-3" @onclick="HandleUpload" disabled="@(!IsFileSelected)">Enviar</button>
</div>

@if (showModal)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Resultado do Upload</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>@uploadMessage</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseModal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    IBrowserFile? selectedFile;
    string? selectedFileName;
    long selectedFileSize;
    string? uploadMessage;
    byte[]? fileContent;

    private InputFile? inputFileRef;
    private bool showModal;

    private bool IsFileSelected => selectedFile != null;

    private Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
        selectedFileName = selectedFile?.Name;
        selectedFileSize = selectedFile?.Size / 1024 ?? 0;
        uploadMessage = null; // reseta qualquer mensagem de upload anterior

        return Task.CompletedTask;
    }

    private async Task HandleUpload()
    {
        if (selectedFile == null)
        {
            uploadMessage = "Nenhum arquivo selecionado.";
            showModal = true;
            return;
        }

        int maxSize = 100 * 1024 * 1024;

        try
        {
            if (selectedFile.Size > maxSize)
            {
                uploadMessage = "Arquivo muito grande. Tamanho máximo permitido: 100MB";
                showModal = true;
                return;
            }

            using var stream = selectedFile.OpenReadStream(maxSize);
            fileContent = new byte[selectedFile.Size];
            await stream.ReadAsync(fileContent);
            uploadMessage = $"Arquivo '{selectedFileName}' armazenado com sucesso!";
        }
        catch (Exception ex)
        {
            uploadMessage = $"Erro ao enviar arquivo: {ex.Message}";
        }
        finally
        {
            showModal = true;
        }
    }

    private async Task TriggerFileInput()
    {
        await JS.InvokeVoidAsync("triggerFileInput", "inputFile"); //utiliza o js para abrir o file input
    }

    private void CloseModal()
    {
        showModal = false;
    }
}

<style>
    .dropzone {
        border: 2px dashed #007bff;
        border-radius: 8px;
        padding: 20px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .dropzone:hover {
        background-color: #f0f8ff;
    }

    .dropzone-text {
        font-size: 1.2rem;
        color: #007bff;
        margin-top: 10px;
    }

    .alert {
        font-size: 1rem;
    }

    ul {
        list-style-type: none;
        padding-left: 0;
    }

    ul li {
        margin-bottom: 5px;
    }

    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1040;
    }

    .modal {
        z-index: 1050;
    }
</style>

<script>
    window.triggerFileInput = (inputId) => {
        document.getElementById(inputId).click();
    };
</script>